geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
grid.arrange(p3, p2, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p3, p2, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 0, vjust = 0),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 0, vjust = 0),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p3, p2, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 0, vjust = 0),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, vjust = .5),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p3, p2, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "For 'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p2, p3, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p2, p3, ncol = 2)
artist_info_ranking <- readRDS("artist_info_ranking.rds")
top_tracks_us <- readRDS("top_tracks_us.rds")
mbdata <- readRDS("./data/mbdata.rds")
#Selecting the necessary variables from each of the datasets
subset_mbdata <- mbdata %>% select(artist_spotify, Begin, End)
subset_artist_info_ranking <- artist_info_ranking %>% select(artist_spotify, artist_id = id, popularity)
subset_top_tracks_us <- top_tracks_us %>% select(artist_spotify, artist_id, track_name, track_id, track_popularity, album.release_date)
merge_data_p3 <- merge(subset_mbdata, subset_artist_info_ranking, by = "artist_spotify")
merge_data_p3 <- merge(merge_data_p3, subset_top_tracks_us, by = "artist_id")
# Convert dates to Date objects
merge_data_p3$Begin <- as.Date(merge_data_p3$Begin)
merge_data_p3$End <- as.Date(merge_data_p3$End)
merge_data_p3$album.release_date <- as.Date(merge_data_p3$album.release_date)
merge_data_p3$band_ended <- ifelse(merge_data_p3$End < merge_data_p3$album.release_date, "Release of Non Active Artist", "Regular Release")
merge_data_p3$band_ended[is.na(merge_data_p3$band_ended)] <- "Regular Release"
merge_data_p3$is_pop <- ifelse(merge_data_p3$popularity > 50, "Popular Artist", "Unpopular Artist")
average_popularity <- merge_data_p3 %>%
group_by(band_ended) %>%
summarise(avg_popularity = mean(popularity))
plot_data <- merge_data_p3 %>% filter(!is.na(album.release_date))
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p2, p3, ncol = 2)
# Create the plot for band_ended facet
p2 <- ggplot(plot_data %>% filter(is_pop == "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Popular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
p3 <- ggplot(plot_data %>% filter(is_pop != "Popular Artist"), aes(x = album.release_date, y = track_popularity, color = band_ended)) +
geom_point(size = 3, alpha = 0.7) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y", limits = c(as.Date("1958-01-01"), as.Date("2023-12-12") )) +
labs(title = "Track Popularity Over Album Release Dates",
subtitle = "'Unpopular' Artists",
x = "Album Release Date",
y = "Track Popularity",
color = "") +
theme_minimal() +
ylim(0,100) +
#xlim(as.Date("1960-01-01"), NA) +
geom_smooth(method = "lm", se = FALSE)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.major.y = element_line(linetype = "dashed"),
plot.title = element_text(size = 16, hjust = 0.5, color = "black", face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black")) +
geom_hline(aes(yintercept = 0), linetype = "solid", color = "black", alpha = 0.5)
# Display the plots side by side
library(gridExtra)
grid.arrange(p2, p3, ncol = 2)
# this chunk generates the complete code appendix.
# eval=FALSE tells R not to run (``evaluate'') the code here (it was already run before).
rs_ranking <- read.csv("rs_ranking.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr) #for stat_cor
library(corrplot) #for correlation table
library(plotly) #making the ggplot interactive
library(viridis) #scale color viridis
library(hrbrthemes)
library(dplyr)
library(knitr) #For printing table of Outlier Summary
library(patchwork)
#################### Final Packages
library(rvest)
library(dplyr)
library(RSelenium)
library(spotifyr)
library("jsonlite")
library(dplyr)
readRenviron("api.env")
client_id <- Sys.getenv("SPOTIFY_CLIENT_ID")
client_secret <- Sys.getenv("SPOTIFY_CLIENT_SECRET")
access_token <- get_spotify_access_token(client_id, client_secret)
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(dplyr)
library(RSelenium)
library(spotifyr)
library("jsonlite")
library(dplyr)
library(ggplot2)
library(plotly) #making the ggplot interactive
library(knitr) #For printing table of Outlier Summary
library(tools)
library(patchwork)
# Create a ggplot with three sets of points representing different popularity metrics
p2 <- ggplot(merged_data_plot2, aes(y = artist_spotify)) +
geom_point(aes(x = track_popularity, color = "Track Popularity"), size = 1.5, alpha = 0.7) +
geom_point(aes(x = popularity, color = "Artist Popularity"), size = 1.5, alpha = 0.7) +
geom_point(aes(x = mean_track_popularity, color = "Average Track Popularity"), size = 1.5, alpha = 0.7) +
theme_minimal() +
labs(title = "Artist and Top Tracks (US) Popularity",
y = NULL,
x = "Popularity",
subtitle = "Artists are in Ascending Popularity Order") +
scale_color_manual(
values = c("#E63946", "#FBAF4F", "#BFD3C1"),
name = NULL
) +
theme(axis.text.x = element_text(hjust = 1, vjust = 1),
panel.grid = element_line(color = alpha("gray", 0.2), linetype = "solid"),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.minor.x = element_line(linetype = "dashed"),
axis.text.y = element_text(hjust = 1, vjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 11),
legend.position = "top") +
geom_vline(xintercept = 0, color = "black", alpha = 0.2) +  # Add vertical line at x = 0
geom_vline(xintercept = 50, color = "black", alpha = 0.2) +  # Add vertical line at x = 0
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
expand = c(0, 0),
limits = c(-1, 101),
sec.axis = sec_axis(~., name = "Popularity"))
# Read artist ranking information and top tracks data from RDS files
artist_info_ranking <- readRDS("./data/artist_info_ranking.rds")
top_tracks_us <- readRDS("./data/top_tracks_us.rds")
# Subset the necessary columns from artist_info_ranking and top_tracks_us
subset_artist <- artist_info_ranking %>% select(id, artist_spotify, popularity, genres)
subset_top_tracks <- top_tracks_us %>% select(artist_id, track_popularity, track_id, track_name, album.release_date)
# Merge the two datasets based on artist IDs
merged_data_plot2 <- merge(subset_artist, subset_top_tracks, by.x = "id", by.y = "artist_id")
# Create mean track popularity data for plotting
mean_data <- merged_data_plot2 %>%
group_by(artist_spotify) %>%
summarise(mean_track_popularity = mean(track_popularity))
# Merge mean data with the original data
merged_data_plot2 <- merge(merged_data_plot2, mean_data, by = "artist_spotify")
# Factoring the artist_spotify for plotting in order of artist popularity
popularity_order <- artist_info_ranking %>% select(artist_spotify, popularity) %>% arrange(desc(popularity))
merged_data_plot2$artist_spotify <- factor(merged_data_plot2$artist_spotify, levels = popularity_order$artist_spotify)
# Create a ggplot with three sets of points representing different popularity metrics
p2 <- ggplot(merged_data_plot2, aes(y = artist_spotify)) +
geom_point(aes(x = track_popularity, color = "Track Popularity"), size = 1.5, alpha = 0.7) +
geom_point(aes(x = popularity, color = "Artist Popularity"), size = 1.5, alpha = 0.7) +
geom_point(aes(x = mean_track_popularity, color = "Average Track Popularity"), size = 1.5, alpha = 0.7) +
theme_minimal() +
labs(title = "Artist and Top Tracks (US) Popularity",
y = NULL,
x = "Popularity",
subtitle = "Artists are in Ascending Popularity Order") +
scale_color_manual(
values = c("#E63946", "#FBAF4F", "#BFD3C1"),
name = NULL
) +
theme(axis.text.x = element_text(hjust = 1, vjust = 1),
panel.grid = element_line(color = alpha("gray", 0.2), linetype = "solid"),
panel.grid.major.x = element_line(linetype = "dashed"),
panel.grid.minor.x = element_line(linetype = "dashed"),
axis.text.y = element_text(hjust = 1, vjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 11),
legend.position = "top") +
geom_vline(xintercept = 0, color = "black", alpha = 0.2) +  # Add vertical line at x = 0
geom_vline(xintercept = 50, color = "black", alpha = 0.2) +  # Add vertical line at x = 0
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
expand = c(0, 0),
limits = c(-1, 101),
sec.axis = sec_axis(~., name = "Popularity"))
# Display the plot
p2
#loading the needed datasets
artist_info_ranking <- readRDS("./data/artist_info_ranking.rds")
# Define artist popularity based on a threshold of 50
artist_info_ranking$is_popular <- ifelse(artist_info_ranking$popularity > 50,
"Popular",
"Not Popular")
# Create a new dataset to use in the plot
# with additional columns and arrange the data
plot_one_data <- artist_info_ranking %>%
# New Column with followers in thousands and round to 2 decimal places
mutate(followers_k = round(followers.total/1000, 2)) %>%
# Convert artist_spotify to a factor
mutate(artist_spotify = factor(artist_spotify, artist_spotify)) %>%
# Prepare text for tooltip in interactive plot
mutate(text = paste("Artist: ", artist_spotify,
"\nPopularity on Spotify: ", popularity,
"\nRanking Rolling Stones: ", ranking,
"\nFollowers (1,000): ", followers_k, sep=""))
# Create a ggplot scatter plot with a smooth line and additional formatting
p1 <- plot_one_data %>%
ggplot() +
geom_point(aes(x = ranking, y = popularity, color = is_popular, text = text), size = 3, alpha = 0.5) +
theme_minimal() +
labs(title = "Rolling Stones Ranking x Spotify Popularity",
color = NULL,
x = "Rolling Stones Ranking",
y = "Spotify Popularity") +
ylim(0, 100) +
xlim(0, 100) +
geom_vline(xintercept = 0, color = "black", alpha = 0.1) +  # Add vertical line at x = 0
geom_hline(yintercept = 0, color = "black", alpha = 0.1) +  # Add horizontal line at y = 0
theme(legend.position = "bottom",
panel.grid = element_line(color = alpha("gray", 0.2), linetype = "dashed"),  # Adjust legend position
axis.text = element_text(size = 8),  # Adjust axis text size
axis.title = element_text(size = 10),
plot.title = element_text(hjust = 0.5))  # Adjust axis title size
# Convert ggplot plot to plotly for interactivity with tooltips
p1_int <- ggplotly(p1, tooltip = "text")
#loading the needed datasets
artist_info_ranking <- readRDS("./data/artist_info_ranking.rds")
# Define artist popularity based on a threshold of 50
artist_info_ranking$is_popular <- ifelse(artist_info_ranking$popularity > 50,
"Popular",
"Not Popular")
# Create a new dataset to use in the plot
# with additional columns and arrange the data
plot_one_data <- artist_info_ranking %>%
# New Column with followers in thousands and round to 2 decimal places
mutate(followers_k = round(followers.total/1000, 2)) %>%
# Convert artist_spotify to a factor
mutate(artist_spotify = factor(artist_spotify, artist_spotify)) %>%
# Prepare text for tooltip in interactive plot
mutate(text = paste("Artist: ", artist_spotify,
"\nPopularity on Spotify: ", popularity,
"\nRanking Rolling Stones: ", ranking,
"\nFollowers (1,000): ", followers_k, sep=""))
# Create a ggplot scatter plot with a smooth line and additional formatting
p1 <- plot_one_data %>%
ggplot() +
geom_point(aes(x = ranking, y = popularity, color = is_popular, text = text), size = 3, alpha = 0.5) +
theme_minimal() +
labs(title = "Rolling Stones Ranking x Spotify Popularity",
color = NULL,
x = "Rolling Stones Ranking",
y = "Spotify Popularity") +
ylim(0, 100) +
xlim(0, 100) +
geom_vline(xintercept = 0, color = "black", alpha = 0.1) +  # Add vertical line at x = 0
geom_hline(yintercept = 0, color = "black", alpha = 0.1) +  # Add horizontal line at y = 0
theme(legend.position = "bottom",
panel.grid = element_line(color = alpha("gray", 0.2), linetype = "dashed"),  # Adjust legend position
axis.text = element_text(size = 8),  # Adjust axis text size
axis.title = element_text(size = 10),
plot.title = element_text(hjust = 0.5))  # Adjust axis title size
# Convert ggplot plot to plotly for interactivity with tooltips
p1_int <- ggplotly(p1, tooltip = "text")
#Plotting the graph
p1_int
